{"ast":null,"code":"export function createAtLeastOneValidator() {\n  return form => {\n    const tempForm = form;\n    const controls = tempForm.controls;\n    for (const control in controls) {\n      if (form.get(control).value === true) {\n        return null;\n      }\n    }\n    return {\n      atLeastOne: true\n    };\n  };\n}","map":{"version":3,"mappings":"AAEA,OAAM,SAAUA,yBAAyB;EACvC,OAAQC,IAAqB,IAA6B;IAExD,MAAMC,QAAQ,GAAGD,IAAiB;IAClC,MAAME,QAAQ,GAAGD,QAAQ,CAACC,QAAQ;IAElC,KAAK,MAAMC,OAAO,IAAID,QAAQ,EAAE;MAC9B,IAAIF,IAAI,CAACI,GAAG,CAACD,OAAO,CAAE,CAACE,KAAK,KAAK,IAAI,EAAE;QACrC,OAAO,IAAI;;;IAGf,OAAO;MAAEC,UAAU,EAAE;IAAI,CAAE;EAC7B,CAAC;AACH","names":["createAtLeastOneValidator","form","tempForm","controls","control","get","value","atLeastOne"],"sourceRoot":"","sources":["C:\\Users\\rutko\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\custom-validators\\at-least-one.ts"],"sourcesContent":["import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function createAtLeastOneValidator(): ValidatorFn {\r\n  return (form: AbstractControl): ValidationErrors | null => {\r\n\r\n    const tempForm = form as FormGroup;\r\n    const controls = tempForm.controls;\r\n    \r\n    for (const control in controls) {\r\n      if (form.get(control)!.value === true) {\r\n        return null;\r\n      }\r\n    }\r\n    return { atLeastOne: true };\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}