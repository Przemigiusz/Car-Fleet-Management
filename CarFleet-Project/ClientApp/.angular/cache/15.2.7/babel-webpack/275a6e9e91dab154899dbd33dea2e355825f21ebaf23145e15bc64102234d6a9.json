{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Vehicle } from '../../models/Vehicle';\nimport { FormGroup, Validators } from '@angular/forms';\nlet NewCarComponent = class NewCarComponent {\n  constructor(addCarService, formBuilder) {\n    this.addCarService = addCarService;\n    this.formBuilder = formBuilder;\n    this.isExpanded = false;\n    this.addCarForm = new FormGroup({});\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.addCarForm = this.formBuilder.group({\n      brand: ['', Validators.required],\n      model: ['', Validators.required],\n      yearOfProduction: ['', Validators.required],\n      mileage: ['', Validators.required],\n      fuelType: ['', Validators.required],\n      doorsAmount: ['', Validators.required],\n      carBodyType: ['', Validators.required]\n    });\n  }\n  submitForm() {\n    if (this.addCarForm.valid) {\n      const formData = this.addCarForm.value;\n      const newVehicle = new Vehicle();\n      newVehicle.brand = formData.brand;\n      newVehicle.model = formData.model;\n      newVehicle.yearOfProduction = formData.yearOfProduction;\n      newVehicle.mileage = formData.mileage;\n      newVehicle.fuelType = formData.fuelType;\n      newVehicle.doorsAmount = formData.doorsAmount;\n      newVehicle.carBodyType = formData.carBodyType;\n      this.addCarService.addCar(newVehicle).subscribe(r => {\n        console.log(\"sukces\");\n      },\n      //r => { debugger }\n      //r => { debugger }\n      err => {\n        console.log(\"błąd\");\n      });\n    } else {\n      console.log(\"Form is not valid!!!\");\n    }\n  }\n  collapse() {\n    this.isExpanded = false;\n  }\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n};\nNewCarComponent = __decorate([Component({\n  selector: 'new-car',\n  templateUrl: './new-car.component.html',\n  styleUrls: ['./new-car.component.css']\n})], NewCarComponent);\nexport { NewCarComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,SAAsBC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,aAA4B,EAC5BC,WAAwB;IADxB,kBAAa,GAAbD,aAAa;IACb,gBAAW,GAAXC,WAAW;IAJ/B,eAAU,GAAG,KAAK;IAClB,eAAU,GAAc,IAAIL,SAAS,CAAC,EAAE,CAAC;EAGO;EAEhDM,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAChCC,KAAK,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MAChCE,gBAAgB,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MAC3CG,OAAO,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACU,QAAQ,CAAC;MAClCI,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACU,QAAQ,CAAC;MACnCK,WAAW,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACU,QAAQ,CAAC;MACtCM,WAAW,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACU,QAAQ;KACtC,CAAC;EACJ;EAEAO,UAAU;IACR,IAAI,IAAI,CAACV,UAAU,CAACW,KAAK,EAAE;MACzB,MAAMC,QAAQ,GAAoB,IAAI,CAACZ,UAAU,CAACa,KAAK;MACvD,MAAMC,UAAU,GAAY,IAAIvB,OAAO,EAAE;MACzCuB,UAAU,CAACZ,KAAK,GAAGU,QAAQ,CAACV,KAAK;MACjCY,UAAU,CAACV,KAAK,GAAGQ,QAAQ,CAACR,KAAK;MACjCU,UAAU,CAACT,gBAAgB,GAAGO,QAAQ,CAACP,gBAAgB;MACvDS,UAAU,CAACR,OAAO,GAAGM,QAAQ,CAACN,OAAO;MACrCQ,UAAU,CAACP,QAAQ,GAAGK,QAAQ,CAACL,QAAQ;MACvCO,UAAU,CAACN,WAAW,GAAGI,QAAQ,CAACJ,WAAW;MAC7CM,UAAU,CAACL,WAAW,GAAGG,QAAQ,CAACH,WAAW;MAC7C,IAAI,CAACb,aAAa,CAACmB,MAAM,CAACD,UAAU,CAAC,CAACE,SAAS,CAC7CC,CAAC,IAAG;QAAGC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MAAC,CAAC;MAAE;MAChC;MAAAC,GAAG,IAAG;QAAGF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MAAC,CAAC,CAAC;KAClC,MACI;MACHD,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;EAGvC;EAEAE,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,KAAK;EACzB;EAEAC,MAAM;IACJ,IAAI,CAACD,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;CACD;AAnDY5B,eAAe,eAL3BJ,SAAS,CAAC;EACTkC,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,GACWhC,eAAe,CAmD3B;SAnDYA,eAAe","names":["Component","Vehicle","FormGroup","Validators","NewCarComponent","constructor","addCarService","formBuilder","ngOnInit","initForm","addCarForm","group","brand","required","model","yearOfProduction","mileage","fuelType","doorsAmount","carBodyType","submitForm","valid","formData","value","newVehicle","addCar","subscribe","r","console","log","err","collapse","isExpanded","toggle","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\przemyslaw.rutkowski\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\app\\new-car-form\\new-car.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AddCarService } from '../../services/add-car.service';\r\nimport { AddCarInterface } from '../../interfaces/add-car.interface';\r\nimport { Vehicle } from '../../models/Vehicle';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'new-car',\r\n  templateUrl: './new-car.component.html',\r\n  styleUrls: ['./new-car.component.css'],\r\n})\r\nexport class NewCarComponent implements OnInit {\r\n  isExpanded = false;\r\n  addCarForm: FormGroup = new FormGroup({});\r\n\r\n  constructor(private addCarService: AddCarService,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  };\r\n\r\n  initForm() {\r\n    this.addCarForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      model: ['', Validators.required],\r\n      yearOfProduction: ['', Validators.required],\r\n      mileage: ['', Validators.required],\r\n      fuelType: ['', Validators.required],\r\n      doorsAmount: ['', Validators.required],\r\n      carBodyType: ['', Validators.required],\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.addCarForm.valid) {\r\n      const formData: AddCarInterface = this.addCarForm.value;\r\n      const newVehicle: Vehicle = new Vehicle();\r\n      newVehicle.brand = formData.brand;\r\n      newVehicle.model = formData.model;\r\n      newVehicle.yearOfProduction = formData.yearOfProduction;\r\n      newVehicle.mileage = formData.mileage;\r\n      newVehicle.fuelType = formData.fuelType;\r\n      newVehicle.doorsAmount = formData.doorsAmount;\r\n      newVehicle.carBodyType = formData.carBodyType;\r\n      this.addCarService.addCar(newVehicle).subscribe(\r\n        r => { console.log(\"sukces\") }, //r => { debugger }\r\n        err => { console.log(\"błąd\") });\r\n    }\r\n    else {\r\n      console.log(\"Form is not valid!!!\");\r\n    }\r\n    \r\n  }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}