{"ast":null,"code":"import { ReplaySubject } from 'rxjs/internal/ReplaySubject';\nimport { takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/loading-spinner.service\";\nimport * as i2 from \"./loading-spinner/loading-spinner.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./footer-menu/footer-menu.component\";\nimport * as i6 from \"./nav-menu/nav-menu.component\";\nconst _c0 = function (a0) {\n  return {\n    \"stopDisplayingSpinner\": a0\n  };\n};\nexport class AppComponent {\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n  constructor(loadingSpinnerService) {\n    this.loadingSpinnerService = loadingSpinnerService;\n    this.title = 'app';\n    this.isSpinnerHidden = false;\n    this.onDestroy$ = new ReplaySubject(1);\n  }\n  ngOnInit() {\n    this.loadingSpinnerService.isSpinnerHidden$().pipe(takeUntil(this.onDestroy$)).subscribe({\n      next: r => {\n        this.isSpinnerHidden = r;\n      },\n      error: err => {\n        console.log(\"error\", err);\n      }\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.LoadingSpinnerService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"bg-light\", \"position-relative\"], [3, \"ngClass\"], [1, \"container-fluid\", \"px-0\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\", 0);\n      i0.ɵɵelement(1, \"app-loading-spinner\", 1)(2, \"app-nav-menu\");\n      i0.ɵɵelementStart(3, \"main\", 2);\n      i0.ɵɵelement(4, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"app-footer-menu\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx.isSpinnerHidden));\n    }\n  },\n  dependencies: [i2.LoadingSpinnerComponent, i3.NgClass, i4.RouterOutlet, i5.FooterMenuComponent, i6.NavMenuComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,SAAS,QAAQ,MAAM;;;;;;;;;;;;;AAMhC,OAAM,MAAOC,YAAY;EAMhBC,WAAW;IAChB,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACD,UAAU,CAACE,QAAQ,EAAE;EAC5B;EAEAC,YAAoBC,qBAA4C;IAA5C,0BAAqB,GAArBA,qBAAqB;IAVzC,UAAK,GAAG,KAAK;IACN,oBAAe,GAAG,KAAK;IAEtB,eAAU,GAA2B,IAAIR,aAAa,CAAU,CAAC,CAAC;EAON;EAEpES,QAAQ;IACN,IAAI,CAACD,qBAAqB,CAACE,gBAAgB,EAAE,CAC1CC,IAAI,CAACV,SAAS,CAAC,IAAI,CAACG,UAAU,CAAC,CAAC,CAChCQ,SAAS,CAAC;MACTP,IAAI,EAAEQ,CAAC,IAAG;QAAG,IAAI,CAACC,eAAe,GAAGD,CAAC;MAAE,CAAC;MACxCE,KAAK,EAAEC,GAAG,IAAG;QAAGC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;MAAC;KAC7C,CAAC;EACJ;;AApBWd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,+BAAyC;MACvCA,yCAAkG;MAElGA,+BAAmC;MACjCA,gCAA+B;MACjCA,iBAAO;MACPA,kCAAmC;MACrCA,iBAAO;;;MANgBA,eAAsD;MAAtDA,yEAAsD","names":["ReplaySubject","takeUntil","AppComponent","ngOnDestroy","onDestroy$","next","complete","constructor","loadingSpinnerService","ngOnInit","isSpinnerHidden$","pipe","subscribe","r","isSpinnerHidden","error","err","console","log","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\rutko\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\app\\app.component.ts","C:\\Users\\rutko\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { LoadingSpinnerService } from '../services/loading-spinner.service'\r\nimport { ReplaySubject } from 'rxjs/internal/ReplaySubject';\r\nimport { takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'app';\r\n  public isSpinnerHidden = false;\r\n\r\n  private onDestroy$: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\r\n\r\n  public ngOnDestroy(): void {\r\n    this.onDestroy$.next(true);\r\n    this.onDestroy$.complete();\r\n  }\r\n\r\n  constructor(private loadingSpinnerService: LoadingSpinnerService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadingSpinnerService.isSpinnerHidden$()\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe({\r\n        next: r => { this.isSpinnerHidden = r; },\r\n        error: err => { console.log(\"error\", err) }\r\n    })\r\n  }\r\n}\r\n","<body class=\"bg-light position-relative\">\r\n  <app-loading-spinner [ngClass]=\"{'stopDisplayingSpinner': isSpinnerHidden}\"></app-loading-spinner>\r\n  <app-nav-menu></app-nav-menu>\r\n  <main class=\"container-fluid px-0\">\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n  <app-footer-menu></app-footer-menu>\r\n</body>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}