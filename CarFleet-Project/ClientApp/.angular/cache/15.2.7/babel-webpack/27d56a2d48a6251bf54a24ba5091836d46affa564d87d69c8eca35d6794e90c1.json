{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FiltersService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:44435/api/filters';\n  }\n  getPriceRanges() {\n    return this.http.get(`${this.baseUrl}/get-price-ranges`);\n  }\n  getFuels() {\n    return this.http.get(`${this.baseUrl}/get-fuels`);\n  }\n  getSortingTypes() {\n    return this.http.get(`${this.baseUrl}/get-sorting-types`);\n  }\n  getCarbodies() {\n    return this.http.get(`${this.baseUrl}/get-carbodies`);\n  }\n  getTransmissionTypes() {\n    return this.http.get(`${this.baseUrl}/get-transmission-types`);\n  }\n  getBrands() {\n    return this.http.get(`${this.baseUrl}/get-brands`);\n  }\n  getModels(brandId) {\n    return this.http.get(`${this.baseUrl}/get-models?brandId=${brandId}`);\n  }\n  getYears() {\n    return this.http.get(`${this.baseUrl}/get-years`);\n  }\n}\nFiltersService.ɵfac = function FiltersService_Factory(t) {\n  return new (t || FiltersService)(i0.ɵɵinject(i1.HttpClient));\n};\nFiltersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FiltersService,\n  factory: FiltersService.ɵfac\n});","map":{"version":3,"mappings":";;AAaA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,qCAAqC;EAEf;EAExCC,cAAc;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAe,GAAG,IAAI,CAACC,OAAO,mBAAmB,CAAC;EACxE;EACAC,QAAQ;IACN,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,OAAO,YAAY,CAAC;EAC3D;EACAE,eAAe;IACb,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAgB,GAAG,IAAI,CAACC,OAAO,oBAAoB,CAAC;EAC1E;EACAG,YAAY;IACV,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,OAAO,gBAAgB,CAAC;EAClE;EACAI,oBAAoB;IAClB,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAqB,GAAG,IAAI,CAACC,OAAO,yBAAyB,CAAC;EACpF;EACAK,SAAS;IACP,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,OAAO,aAAa,CAAC;EAC7D;EACAM,SAAS,CAACC,OAAe;IACvB,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,OAAO,uBAAuBO,OAAO,EAAE,CAAC;EAChF;EACAC,QAAQ;IACN,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAqB,GAAG,IAAI,CAACC,OAAO,YAAY,CAAC;EACvE;;AA5BWL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAc,SAAdd,cAAc;AAAA","names":["FiltersService","constructor","http","getPriceRanges","get","baseUrl","getFuels","getSortingTypes","getCarbodies","getTransmissionTypes","getBrands","getModels","brandId","getYears","factory"],"sourceRoot":"","sources":["C:\\Users\\rutko\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\services\\filters.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PriceRange } from '../models/PriceRange';\r\nimport { Fuel } from '../models/Fuel';\r\nimport { SortingType } from '../models/SortingType';\r\nimport { Carbody } from '../models/Carbody';\r\nimport { TransmissionType } from '../models/TransmissionType';\r\nimport { Observable } from 'rxjs';\r\nimport { Model } from '../models/Model';\r\nimport { Brand } from '../models/Brand';\r\nimport { YearOfProduction } from '../models/YearOfProduction';\r\n\r\n@Injectable()\r\nexport class FiltersService {\r\n  private baseUrl = 'https://localhost:44435/api/filters';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPriceRanges(): Observable<PriceRange[]> {\r\n    return this.http.get<PriceRange[]>(`${this.baseUrl}/get-price-ranges`);\r\n  }\r\n  getFuels(): Observable<Fuel[]> {\r\n    return this.http.get<Fuel[]>(`${this.baseUrl}/get-fuels`);\r\n  }\r\n  getSortingTypes(): Observable<SortingType[]> {\r\n    return this.http.get<SortingType[]>(`${this.baseUrl}/get-sorting-types`);\r\n  }\r\n  getCarbodies(): Observable<Carbody[]> {\r\n    return this.http.get<Carbody[]>(`${this.baseUrl}/get-carbodies`);\r\n  }\r\n  getTransmissionTypes(): Observable<TransmissionType[]> {\r\n    return this.http.get<TransmissionType[]>(`${this.baseUrl}/get-transmission-types`);\r\n  }\r\n  getBrands(): Observable<Brand[]> {\r\n    return this.http.get<Brand[]>(`${this.baseUrl}/get-brands`);\r\n  }\r\n  getModels(brandId: number): Observable<Model[]> {\r\n    return this.http.get<Model[]>(`${this.baseUrl}/get-models?brandId=${brandId}`);\r\n  }\r\n  getYears(): Observable<YearOfProduction[]> {\r\n    return this.http.get<YearOfProduction[]>(`${this.baseUrl}/get-years`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}