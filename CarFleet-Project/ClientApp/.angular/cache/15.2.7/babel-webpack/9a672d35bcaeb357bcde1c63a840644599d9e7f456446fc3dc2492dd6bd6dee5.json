{"ast":null,"code":"import { Vehicle } from '../../models/Vehicle';\nimport { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/add-car.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction NewCarComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelement(1, \"input\", 29);\n    i0.ɵɵelementStart(2, \"label\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const element_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", element_r1.idFor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", element_r1.idFor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r1.name);\n  }\n}\nexport class NewCarComponent {\n  constructor(addCarService, formBuilder) {\n    this.addCarService = addCarService;\n    this.formBuilder = formBuilder;\n    this.isExpanded = false;\n    this.addCarForm = new FormGroup({});\n    this.equipment = [{\n      name: \"Klimatyzacja\",\n      selected: false,\n      idFor: \"AirConditioning\",\n      id: 1\n    }, {\n      name: \"System Multimedialny\",\n      selected: false,\n      idFor: \"MultimediaSystem\"\n    }, {\n      name: \"Bluetooth/USB\",\n      selected: false,\n      idFor: \"BluetoothUSB\"\n    }, {\n      name: \"ABS\",\n      selected: false,\n      idFor: \"ABS\"\n    }, {\n      name: \"ESP\",\n      selected: false,\n      idFor: \"ESP\"\n    }, {\n      name: \"Czujniki Cofania\",\n      selected: false,\n      idFor: \"ReverseSensors\"\n    }, {\n      name: \"Ogrzewane Fotele\",\n      selected: false,\n      idFor: \"HeatedSeats\"\n    }, {\n      name: \"Cruise Control \",\n      selected: false,\n      idFor: \"CruiseControl\"\n    }, {\n      name: \"Kamera Cofania\",\n      selected: false,\n      idFor: \"ReverseCamera\"\n    }];\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    this.addCarForm = this.formBuilder.group({\n      brand: ['', Validators.required],\n      model: ['', Validators.required],\n      yearOfProduction: ['', Validators.required],\n      mileage: ['', Validators.required],\n      fuelType: ['', Validators.required],\n      doorsAmount: ['', Validators.required],\n      carBodyType: ['', Validators.required],\n      equipment: this.equipment\n    });\n  }\n  submitForm() {\n    if (this.addCarForm.valid) {\n      const formData = this.addCarForm.value;\n      const newVehicle = new Vehicle();\n      newVehicle.brand = formData.brand;\n      newVehicle.model = formData.model;\n      newVehicle.yearOfProduction = formData.yearOfProduction;\n      newVehicle.mileage = formData.mileage;\n      newVehicle.fuelType = formData.fuelType;\n      newVehicle.doorsAmount = formData.doorsAmount;\n      newVehicle.carBodyType = formData.carBodyType;\n      newVehicle.equipment = formData.equipment;\n      this.addCarService.addCar(newVehicle).subscribe(r => {\n        console.log(\"sukces\");\n      },\n      //r => { debugger }\n      //r => { debugger }\n      err => {\n        console.log(\"błąd\");\n      });\n    } else {\n      console.log(\"Form is not valid!!!\");\n    }\n  }\n  collapse() {\n    this.isExpanded = false;\n  }\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\nNewCarComponent.ɵfac = function NewCarComponent_Factory(t) {\n  return new (t || NewCarComponent)(i0.ɵɵdirectiveInject(i1.AddCarService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nNewCarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewCarComponent,\n  selectors: [[\"new-car\"]],\n  decls: 49,\n  vars: 2,\n  consts: [[1, \"mt-5\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"container-fluid\"], [1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [1, \"mb-3\"], [\"for\", \"BrandDataList\", 1, \"form-label\"], [\"formControlName\", \"brand\", \"list\", \"datalistOptions\", \"id\", \"BrandDataList\", \"placeholder\", \"Marka\", 1, \"form-control\"], [\"id\", \"BrandDatalistOptions\"], [\"for\", \"ModelDataList\", 1, \"form-label\"], [\"formControlName\", \"model\", \"list\", \"datalistOptions\", \"id\", \"ModelDataList\", \"placeholder\", \"Model\", 1, \"form-control\"], [\"id\", \"ModelDatalistOptions\"], [1, \"input-group\", \"mb-3\"], [\"for\", \"exampleDataList\", 1, \"form-label\", \"w-100\"], [\"formControlName\", \"yearOfProduction\", \"type\", \"text\", \"placeholder\", \"Rok produkcji\", \"aria-label\", \"Rok produkcji\", \"aria-describedby\", \"basic-addon1\", 1, \"form-control\"], [\"formControlName\", \"mileage\", \"type\", \"text\", \"placeholder\", \"Przebieg\", \"aria-label\", \"Przebieg\", \"aria-describedby\", \"basic-addon1\", 1, \"form-control\"], [\"for\", \"FuelDataList\", 1, \"form-label\"], [\"formControlName\", \"fuelType\", \"list\", \"datalistOptions\", \"id\", \"FuelDataList\", \"placeholder\", \"Rodzaj paliwa\", 1, \"form-control\"], [\"id\", \"FuelDatalistOptions\"], [\"formControlName\", \"doorsAmount\", \"type\", \"text\", \"placeholder\", \"Liczba drzwi\", \"aria-label\", \"Liczba drzwi\", \"aria-describedby\", \"basic-addon1\", 1, \"form-control\"], [\"for\", \"CarBodyDataList\", 1, \"form-label\"], [\"formControlName\", \"carBodyType\", \"list\", \"datalistOptions\", \"id\", \"CarBodyDataList\", \"placeholder\", \"Rodzaj nadwozia\", 1, \"form-control\"], [\"id\", \"CarBodyDatalistOptions\"], [1, \"col-8\", \"mb-5\"], [1, \"row\"], [\"class\", \"col-4 align-content-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-8\", \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-auto\", \"submitBtn\"], [1, \"col-4\", \"align-content-center\"], [\"type\", \"checkbox\", \"autocomplete\", \"off\", 1, \"btn-check\", 3, \"id\"], [1, \"btn\", \"btn-outline-primary\", 3, \"for\"]],\n  template: function NewCarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function NewCarComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Marka\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 7)(9, \"datalist\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"div\", 5)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 10)(15, \"datalist\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"div\", 12)(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Rok Produkcji\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"div\", 12)(23, \"label\", 13);\n      i0.ɵɵtext(24, \"Przebieg\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"div\", 5)(28, \"label\", 16);\n      i0.ɵɵtext(29, \"Rodzaj paliwa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 17)(31, \"datalist\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"div\", 4)(33, \"div\", 12)(34, \"label\", 13);\n      i0.ɵɵtext(35, \"Liczba drzwi\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"input\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 4)(38, \"div\", 5)(39, \"label\", 20);\n      i0.ɵɵtext(40, \"Rodzaj nadwozia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 21)(42, \"datalist\", 22);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 23)(44, \"div\", 24);\n      i0.ɵɵtemplate(45, NewCarComponent_div_45_Template, 4, 3, \"div\", 25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(46, \"div\", 26)(47, \"button\", 27);\n      i0.ɵɵtext(48, \"Dodaj pojazd\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.addCarForm);\n      i0.ɵɵadvance(44);\n      i0.ɵɵproperty(\"ngForOf\", ctx.equipment);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"section[_ngcontent-%COMP%] {\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n}\\r\\n\\r\\n.submitBtn[_ngcontent-%COMP%] {\\r\\n  background-color: #7743DB;\\r\\n}\\r\\n\\r\\n.btn-outline-primary[_ngcontent-%COMP%] {\\r\\n  --bs-btn-color: #7743DB;\\r\\n  --bs-btn-border-color: #7743DB;\\r\\n  --bs-btn-hover-color: #fff;\\r\\n  --bs-btn-hover-bg: #7743DB;\\r\\n  --bs-btn-hover-border-color: #7743DB;\\r\\n  --bs-btn-focus-shadow-rgb: 13,110,253;\\r\\n  --bs-btn-active-color: #fff;\\r\\n  --bs-btn-active-bg: #7743DB;\\r\\n  --bs-btn-active-border-color: #7743DB;\\r\\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\\r\\n  --bs-btn-disabled-color: #7743DB;\\r\\n  --bs-btn-disabled-bg: transparent;\\r\\n  --bs-btn-disabled-border-color: #7743DB;\\r\\n  --bs-gradient: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmV3LWNhci1mb3JtL25ldy1jYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2Qiw4QkFBOEI7RUFDOUIsMEJBQTBCO0VBQzFCLDBCQUEwQjtFQUMxQixvQ0FBb0M7RUFDcEMscUNBQXFDO0VBQ3JDLDJCQUEyQjtFQUMzQiwyQkFBMkI7RUFDM0IscUNBQXFDO0VBQ3JDLDREQUE0RDtFQUM1RCxnQ0FBZ0M7RUFDaEMsaUNBQWlDO0VBQ2pDLHVDQUF1QztFQUN2QyxtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJzZWN0aW9uIHtcclxuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbi5zdWJtaXRCdG4ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM3NzQzREI7XHJcbn1cclxuXHJcbi5idG4tb3V0bGluZS1wcmltYXJ5IHtcclxuICAtLWJzLWJ0bi1jb2xvcjogIzc3NDNEQjtcclxuICAtLWJzLWJ0bi1ib3JkZXItY29sb3I6ICM3NzQzREI7XHJcbiAgLS1icy1idG4taG92ZXItY29sb3I6ICNmZmY7XHJcbiAgLS1icy1idG4taG92ZXItYmc6ICM3NzQzREI7XHJcbiAgLS1icy1idG4taG92ZXItYm9yZGVyLWNvbG9yOiAjNzc0M0RCO1xyXG4gIC0tYnMtYnRuLWZvY3VzLXNoYWRvdy1yZ2I6IDEzLDExMCwyNTM7XHJcbiAgLS1icy1idG4tYWN0aXZlLWNvbG9yOiAjZmZmO1xyXG4gIC0tYnMtYnRuLWFjdGl2ZS1iZzogIzc3NDNEQjtcclxuICAtLWJzLWJ0bi1hY3RpdmUtYm9yZGVyLWNvbG9yOiAjNzc0M0RCO1xyXG4gIC0tYnMtYnRuLWFjdGl2ZS1zaGFkb3c6IGluc2V0IDAgM3B4IDVweCByZ2JhKDAsIDAsIDAsIDAuMTI1KTtcclxuICAtLWJzLWJ0bi1kaXNhYmxlZC1jb2xvcjogIzc3NDNEQjtcclxuICAtLWJzLWJ0bi1kaXNhYmxlZC1iZzogdHJhbnNwYXJlbnQ7XHJcbiAgLS1icy1idG4tZGlzYWJsZWQtYm9yZGVyLWNvbG9yOiAjNzc0M0RCO1xyXG4gIC0tYnMtZ3JhZGllbnQ6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Vehicle","FormGroup","Validators","i0","NewCarComponent","constructor","addCarService","formBuilder","name","selected","idFor","id","ngOnInit","initForm","addCarForm","group","brand","required","model","yearOfProduction","mileage","fuelType","doorsAmount","carBodyType","equipment","submitForm","valid","formData","value","newVehicle","addCar","subscribe","r","console","log","err","collapse","isExpanded","toggle","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\przemyslaw.rutkowski\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\app\\new-car-form\\new-car.component.ts","C:\\Users\\przemyslaw.rutkowski\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\app\\new-car-form\\new-car.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AddCarService } from '../../services/add-car.service';\r\nimport { AddCarInterface } from '../../interfaces/add-car.interface';\r\nimport { Vehicle } from '../../models/Vehicle';\r\nimport { Equipment } from '../../models/Equipment';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'new-car',\r\n  templateUrl: './new-car.component.html',\r\n  styleUrls: ['./new-car.component.css'],\r\n})\r\nexport class NewCarComponent implements OnInit {\r\n  isExpanded = false;\r\n  addCarForm: FormGroup = new FormGroup({});\r\n  equipment: any = \r\n    [\r\n      { name: \"Klimatyzacja\", selected: false, idFor: \"AirConditioning\",id:1},\r\n      { name: \"System Multimedialny\", selected: false, idFor: \"MultimediaSystem\"},\r\n      { name: \"Bluetooth/USB\", selected: false, idFor: \"BluetoothUSB\"},\r\n      { name: \"ABS\", selected: false, idFor: \"ABS\" },\r\n      { name: \"ESP\", selected: false, idFor: \"ESP\" },\r\n      { name: \"Czujniki Cofania\", selected: false, idFor: \"ReverseSensors\"},\r\n      { name: \"Ogrzewane Fotele\", selected: false, idFor: \"HeatedSeats\"},\r\n      { name: \"Cruise Control \", selected: false, idFor: \"CruiseControl\"},\r\n      { name: \"Kamera Cofania\", selected: false, idFor: \"ReverseCamera\"},\r\n   ];\r\n\r\n  constructor(private addCarService: AddCarService,\r\n              private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  };\r\n\r\n  initForm() {\r\n    this.addCarForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      model: ['', Validators.required],\r\n      yearOfProduction: ['', Validators.required],\r\n      mileage: ['', Validators.required],\r\n      fuelType: ['', Validators.required],\r\n      doorsAmount: ['', Validators.required],\r\n      carBodyType: ['', Validators.required],\r\n      equipment: this.equipment,\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.addCarForm.valid) {\r\n      const formData: AddCarInterface = this.addCarForm.value;\r\n      const newVehicle: Vehicle = new Vehicle();\r\n      newVehicle.brand = formData.brand;\r\n      newVehicle.model = formData.model;\r\n      newVehicle.yearOfProduction = formData.yearOfProduction;\r\n      newVehicle.mileage = formData.mileage;\r\n      newVehicle.fuelType = formData.fuelType;\r\n      newVehicle.doorsAmount = formData.doorsAmount;\r\n      newVehicle.carBodyType = formData.carBodyType;\r\n      newVehicle.equipment = formData.equipment;\r\n      this.addCarService.addCar(newVehicle).subscribe(\r\n        r => { console.log(\"sukces\") }, //r => { debugger }\r\n        err => { console.log(\"błąd\") });\r\n    }\r\n    else {\r\n      console.log(\"Form is not valid!!!\");\r\n    }\r\n    \r\n  }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<section class=\"mt-5 mb-5\">\r\n  <form [formGroup]=\"addCarForm\" (ngSubmit)=\"submitForm()\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"BrandDataList\" class=\"form-label\">Marka</label>\r\n            <input formControlName=\"brand\" class=\"form-control\" list=\"datalistOptions\" id=\"BrandDataList\" placeholder=\"Marka\">\r\n            <datalist id=\"BrandDatalistOptions\">\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"ModelDataList\" class=\"form-label\">Model</label>\r\n            <input formControlName=\"model\" class=\"form-control\" list=\"datalistOptions\" id=\"ModelDataList\" placeholder=\"Model\">\r\n            <datalist id=\"ModelDatalistOptions\">\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"input-group mb-3\">\r\n            <label for=\"exampleDataList\" class=\"form-label w-100\">Rok Produkcji</label>\r\n            <input formControlName=\"yearOfProduction\" type=\"text\" class=\"form-control\" placeholder=\"Rok produkcji\" aria-label=\"Rok produkcji\" aria-describedby=\"basic-addon1\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"input-group mb-3\">\r\n            <label for=\"exampleDataList\" class=\"form-label w-100\">Przebieg</label>\r\n            <input formControlName=\"mileage\" type=\"text\" class=\"form-control\" placeholder=\"Przebieg\" aria-label=\"Przebieg\" aria-describedby=\"basic-addon1\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"FuelDataList\" class=\"form-label\">Rodzaj paliwa</label>\r\n            <input formControlName=\"fuelType\" class=\"form-control\" list=\"datalistOptions\" id=\"FuelDataList\" placeholder=\"Rodzaj paliwa\">\r\n            <datalist id=\"FuelDatalistOptions\">\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"input-group mb-3\">\r\n            <label for=\"exampleDataList\" class=\"form-label w-100\">Liczba drzwi</label>\r\n            <input formControlName=\"doorsAmount\" type=\"text\" class=\"form-control\" placeholder=\"Liczba drzwi\" aria-label=\"Liczba drzwi\" aria-describedby=\"basic-addon1\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"CarBodyDataList\" class=\"form-label\">Rodzaj nadwozia</label>\r\n            <input formControlName=\"carBodyType\" class=\"form-control\" list=\"datalistOptions\" id=\"CarBodyDataList\" placeholder=\"Rodzaj nadwozia\">\r\n            <datalist id=\"CarBodyDatalistOptions\">\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8 mb-5\">\r\n          <div class=\"row\" >\r\n            <div class=\"col-4 align-content-center\" *ngFor=\"let element of equipment\">\r\n              <input type=\"checkbox\" class=\"btn-check\" id=\"{{element.idFor}}\" autocomplete=\"off\">\r\n              <label class=\"btn btn-outline-primary\" for=\"{{element.idFor}}\">{{element.name}}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8 d-flex justify-content-center\">\r\n          <button type=\"submit\" class=\"btn btn-primary w-auto submitBtn\">Dodaj pojazd</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}