{"ast":null,"code":"import { Vehicle } from '../../models/Vehicle';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { ReplaySubject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/vehicles.service\";\nimport * as i2 from \"../../services/equipment.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/filters.service\";\nimport * as i5 from \"@angular/common\";\nfunction NewCarComponent_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"input\", 38);\n    i0.ɵɵlistener(\"click\", function NewCarComponent_div_61_Template_input_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const opElement_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateValue(opElement_r1));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 39);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const opElement_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", opElement_r1.elementName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", opElement_r1.elementName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(opElement_r1.elementName);\n  }\n}\nexport class NewCarComponent {\n  updateValue(opElement) {\n    if (opElement.isChecked === false) {\n      opElement.isChecked = true;\n    } else {\n      opElement.isChecked = false;\n    }\n  }\n  constructor(addCarService, getEquipmentElementsService, formBuilder, getFiltersService) {\n    this.addCarService = addCarService;\n    this.getEquipmentElementsService = getEquipmentElementsService;\n    this.formBuilder = formBuilder;\n    this.getFiltersService = getFiltersService;\n    this.isExpanded = false;\n    this.addCarForm = new FormGroup({});\n    this.vehicleImages = []; //Photos of the car\n    this.onDestroy$ = new ReplaySubject(1);\n  }\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n  ngOnInit() {\n    this.initForm();\n    this.getEquipmentElementsService.getEquipmentElements().pipe(takeUntil(this.onDestroy$)).subscribe(r => {\n      this.equipment = r;\n      this.operationalEquipment = [];\n      for (let el of this.equipment) {\n        this.operationalEquipment.push({\n          equipmentElement: el,\n          isChecked: false\n        });\n      }\n    }, err => {\n      console.log(\"error\", err);\n    });\n    this.getFiltersService.getCarbodies().pipe(takeUntil(this.onDestroy$)).subscribe(r => {\n      this.carbodies = r;\n    }, err => {\n      console.log(\"error\", err);\n    });\n    this.getFiltersService.getFuels().pipe(takeUntil(this.onDestroy$)).subscribe(r => {\n      this.fuels = r;\n    }, err => {\n      console.log(\"error\", err);\n    });\n    this.getFiltersService.getTransmissionTypes().pipe(takeUntil(this.onDestroy$)).subscribe(r => {\n      this.transmissionTypes = r;\n    }, err => {\n      console.log(\"error\", err);\n    });\n    this.getFiltersService.getModels().pipe(takeUntil(this.onDestroy$)).subscribe(r => {\n      this.models = r;\n    }, err => {\n      console.log(\"error\", err);\n    });\n    this.getFiltersService.getBrands().pipe(takeUntil(this.onDestroy$)).subscribe(r => {\n      this.brands = r;\n    }, err => {\n      console.log(\"error\", err);\n    });\n  }\n  initForm() {\n    this.addCarForm = this.formBuilder.group({\n      brand: ['', Validators.required],\n      model: ['', Validators.required],\n      yearOfProduction: ['', Validators.required],\n      mileage: ['', Validators.required],\n      fuel: ['', Validators.required],\n      doorsAmount: ['', Validators.required],\n      carbodyType: ['', Validators.required],\n      vehicleImage: [null, Validators.required]\n    });\n  }\n  *fileChanged(event) {\n    const imageInputElement = event.target;\n    if (imageInputElement.files && imageInputElement.files.length > 0) {\n      const files = imageInputElement.files;\n      for (const file of files) {\n        this.vehicleImages.push(file);\n      }\n    }\n  }\n  submitForm() {\n    if (this.addCarForm.valid) {\n      const formData = this.addCarForm.value;\n      const newVehicle = new Vehicle();\n      newVehicle.brandId = this.brands.find(brand => brand.brandName === formData.brand).brandId;\n      newVehicle.modelId = this.models.find(model => model.modelName === formData.model).modelId;\n      newVehicle.yearOfProduction = formData.yearOfProduction;\n      newVehicle.mileage = formData.mileage;\n      formData.fuels.forEach(f1 => {\n        const matchingFuel = this.fuels.find(f2 => f2.fuelName === f1);\n        if (matchingFuel) {\n          newVehicle.fuels.push(matchingFuel);\n        }\n      });\n      newVehicle.doorsAmount = formData.doorsAmount;\n      newVehicle.carbodyId = this.carbodies.find(c => c.carbodyName === formData.carBodyType).carbodyId;\n      for (let opElement of this.operationalEquipment) {\n        if (opElement.isChecked === true) {\n          const matchingEquipmentElement = this.equipment.find(ee => ee.elementId === opElement.elementId);\n          if (matchingEquipmentElement) {\n            newVehicle.equipment.push(matchingEquipmentElement);\n          }\n        }\n      }\n      this.addCarService.addVehicle(newVehicle).pipe(takeUntil(this.onDestroy$)).subscribe(r => {\n        debugger;\n      }, err => {\n        console.log(\"błąd\"), console.log(err);\n      });\n    } else {\n      console.log(\"Form is not valid!!!\");\n      this.getFormValidationErrors();\n    }\n  }\n  getFormValidationErrors() {\n    Object.keys(this.addCarForm.controls).forEach((key, value) => {\n      const controlErrors = this.addCarForm.get(key).errors;\n      Object.keys(controlErrors || {}).forEach(keyError => {\n        console.log(`Key control: ${key}, keyError: ${keyError}, errValue: ${controlErrors[keyError]}`);\n      });\n    });\n  }\n  collapse() {\n    this.isExpanded = false;\n  }\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n}\nNewCarComponent.ɵfac = function NewCarComponent_Factory(t) {\n  return new (t || NewCarComponent)(i0.ɵɵdirectiveInject(i1.VehiclesService), i0.ɵɵdirectiveInject(i2.EquipmentService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.FiltersService));\n};\nNewCarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewCarComponent,\n  selectors: [[\"new-car\"]],\n  decls: 65,\n  vars: 8,\n  consts: [[1, \"mt-5\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"container-fluid\"], [1, \"row\", \"justify-content-center\"], [1, \"col-8\"], [1, \"mb-3\"], [\"for\", \"BrandDataList\", 1, \"form-label\"], [\"formControlName\", \"brand\", \"list\", \"datalistOptions\", \"id\", \"BrandDataList\", \"placeholder\", \"Marka\", 1, \"form-control\"], [\"id\", \"BrandDatalistOptions\"], [\"ngFor\", \"let brand of brands\", 3, \"value\"], [\"for\", \"ModelDataList\", 1, \"form-label\"], [\"formControlName\", \"model\", \"list\", \"datalistOptions\", \"id\", \"ModelDataList\", \"placeholder\", \"Model\", 1, \"form-control\"], [\"id\", \"ModelDatalistOptions\"], [\"ngFor\", \"let model of models\", 3, \"value\"], [1, \"input-group\", \"mb-3\"], [\"for\", \"exampleDataList\", 1, \"form-label\", \"w-100\"], [\"formControlName\", \"yearOfProduction\", \"type\", \"text\", \"placeholder\", \"Rok produkcji\", \"aria-label\", \"Rok produkcji\", \"aria-describedby\", \"basic-addon1\", 1, \"form-control\"], [\"formControlName\", \"mileage\", \"type\", \"text\", \"placeholder\", \"Przebieg\", \"aria-label\", \"Przebieg\", \"aria-describedby\", \"basic-addon1\", 1, \"form-control\"], [\"for\", \"FuelSelect\", 1, \"form-label\"], [\"id\", \"FuelSelect\", \"multiple\", \"\", 1, \"select\"], [\"ngFor\", \"let fuel of fuels\", 3, \"value\"], [\"formControlName\", \"doorsAmount\", \"type\", \"text\", \"placeholder\", \"Liczba drzwi\", \"aria-label\", \"Liczba drzwi\", \"aria-describedby\", \"basic-addon1\", 1, \"form-control\"], [\"for\", \"TransmissionTypeDataList\", 1, \"form-label\"], [\"formControlName\", \"carbodyType\", \"list\", \"datalistOptions\", \"id\", \"TransmissionTypeDataList\", \"placeholder\", \"Rodzaj skrzyni bieg\\u00F3w\", 1, \"form-control\"], [\"id\", \"TransmissionTypeDatalistOptions\"], [\"ngFor\", \"let transmissionType of transmissionTypes\", 3, \"value\"], [\"for\", \"CarbodyDataList\", 1, \"form-label\"], [\"formControlName\", \"carbodyType\", \"list\", \"datalistOptions\", \"id\", \"CarbodyDataList\", \"placeholder\", \"Rodzaj nadwozia\", 1, \"form-control\"], [\"id\", \"CarbodyDatalistOptions\"], [\"ngFor\", \"let carbody of carbodies\", 3, \"value\"], [\"for\", \"vehicleImage\", 1, \"form-label\"], [\"formControlName\", \"vehicleImage\", \"id\", \"vehicleImage\", \"type\", \"file\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [1, \"col-8\", \"mb-5\"], [1, \"row\"], [\"class\", \"col-4 mb-2 d-flex justify-content-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-8\", \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-auto\", \"submitBtn\"], [1, \"col-4\", \"mb-2\", \"d-flex\", \"justify-content-center\"], [\"type\", \"checkbox\", \"autocomplete\", \"off\", 1, \"btn-check\", 3, \"id\", \"click\"], [1, \"btn\", \"btn-outline-primary\", 3, \"for\"]],\n  template: function NewCarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function NewCarComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Marka\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 7);\n      i0.ɵɵelementStart(9, \"datalist\", 8);\n      i0.ɵɵelement(10, \"option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 5)(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵelementStart(16, \"datalist\", 12);\n      i0.ɵɵelement(17, \"option\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 14)(20, \"label\", 15);\n      i0.ɵɵtext(21, \"Rok Produkcji\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"div\", 14)(25, \"label\", 15);\n      i0.ɵɵtext(26, \"Przebieg\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 4)(29, \"div\", 5)(30, \"label\", 18);\n      i0.ɵɵtext(31, \"Rodzaj paliwa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"select\", 19)(33, \"option\", 20);\n      i0.ɵɵtext(34);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(35, \"div\", 4)(36, \"div\", 14)(37, \"label\", 15);\n      i0.ɵɵtext(38, \"Liczba drzwi\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 21);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 4)(41, \"div\", 5)(42, \"label\", 22);\n      i0.ɵɵtext(43, \"Rodzaj skrzyni bieg\\u00F3w\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 23);\n      i0.ɵɵelementStart(45, \"datalist\", 24);\n      i0.ɵɵelement(46, \"option\", 25);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(47, \"div\", 4)(48, \"div\", 5)(49, \"label\", 26);\n      i0.ɵɵtext(50, \"Rodzaj nadwozia\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(51, \"input\", 27);\n      i0.ɵɵelementStart(52, \"datalist\", 28);\n      i0.ɵɵelement(53, \"option\", 29);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(54, \"div\", 4)(55, \"div\", 5)(56, \"label\", 30);\n      i0.ɵɵtext(57, \"Zdj\\u0119cie pojazdu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"input\", 31);\n      i0.ɵɵlistener(\"change\", function NewCarComponent_Template_input_change_58_listener($event) {\n        return ctx.fileChanged($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(59, \"div\", 32)(60, \"div\", 33);\n      i0.ɵɵtemplate(61, NewCarComponent_div_61_Template, 4, 3, \"div\", 34);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(62, \"div\", 35)(63, \"button\", 36);\n      i0.ɵɵtext(64, \"Dodaj pojazd\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.addCarForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.brand.brandName);\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.model.modelName);\n      i0.ɵɵadvance(16);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.fuel.fuelName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.fuel.fuelName);\n      i0.ɵɵadvance(12);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.transmissionType.typeName);\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.carbody.carbodyName);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.operationalEquipment);\n    }\n  },\n  dependencies: [i5.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"section[_ngcontent-%COMP%] {\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n}\\r\\n\\r\\n.submitBtn[_ngcontent-%COMP%] {\\r\\n  background-color: #7743DB;\\r\\n}\\r\\n\\r\\n.btn-outline-primary[_ngcontent-%COMP%] {\\r\\n  --bs-btn-color: #7743DB;\\r\\n  --bs-btn-border-color: #7743DB;\\r\\n  --bs-btn-hover-color: #fff;\\r\\n  --bs-btn-hover-bg: #7743DB;\\r\\n  --bs-btn-hover-border-color: #7743DB;\\r\\n  --bs-btn-focus-shadow-rgb: 13,110,253;\\r\\n  --bs-btn-active-color: #fff;\\r\\n  --bs-btn-active-bg: #7743DB;\\r\\n  --bs-btn-active-border-color: #7743DB;\\r\\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\\r\\n  --bs-btn-disabled-color: #7743DB;\\r\\n  --bs-btn-disabled-bg: transparent;\\r\\n  --bs-btn-disabled-border-color: #7743DB;\\r\\n  --bs-gradient: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmV3LWNhci9uZXctY2FyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsOEJBQThCO0VBQzlCLDBCQUEwQjtFQUMxQiwwQkFBMEI7RUFDMUIsb0NBQW9DO0VBQ3BDLHFDQUFxQztFQUNyQywyQkFBMkI7RUFDM0IsMkJBQTJCO0VBQzNCLHFDQUFxQztFQUNyQyw0REFBNEQ7RUFDNUQsZ0NBQWdDO0VBQ2hDLGlDQUFpQztFQUNqQyx1Q0FBdUM7RUFDdkMsbUJBQW1CO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsic2VjdGlvbiB7XHJcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4uc3VibWl0QnRuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzc0M0RCO1xyXG59XHJcblxyXG4uYnRuLW91dGxpbmUtcHJpbWFyeSB7XHJcbiAgLS1icy1idG4tY29sb3I6ICM3NzQzREI7XHJcbiAgLS1icy1idG4tYm9yZGVyLWNvbG9yOiAjNzc0M0RCO1xyXG4gIC0tYnMtYnRuLWhvdmVyLWNvbG9yOiAjZmZmO1xyXG4gIC0tYnMtYnRuLWhvdmVyLWJnOiAjNzc0M0RCO1xyXG4gIC0tYnMtYnRuLWhvdmVyLWJvcmRlci1jb2xvcjogIzc3NDNEQjtcclxuICAtLWJzLWJ0bi1mb2N1cy1zaGFkb3ctcmdiOiAxMywxMTAsMjUzO1xyXG4gIC0tYnMtYnRuLWFjdGl2ZS1jb2xvcjogI2ZmZjtcclxuICAtLWJzLWJ0bi1hY3RpdmUtYmc6ICM3NzQzREI7XHJcbiAgLS1icy1idG4tYWN0aXZlLWJvcmRlci1jb2xvcjogIzc3NDNEQjtcclxuICAtLWJzLWJ0bi1hY3RpdmUtc2hhZG93OiBpbnNldCAwIDNweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEyNSk7XHJcbiAgLS1icy1idG4tZGlzYWJsZWQtY29sb3I6ICM3NzQzREI7XHJcbiAgLS1icy1idG4tZGlzYWJsZWQtYmc6IHRyYW5zcGFyZW50O1xyXG4gIC0tYnMtYnRuLWRpc2FibGVkLWJvcmRlci1jb2xvcjogIzc3NDNEQjtcclxuICAtLWJzLWdyYWRpZW50OiBub25lO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,OAAO,QAAQ,sBAAsB;AAG9C,SAAsBC,SAAS,EAAEC,UAAU,QAAuC,gBAAgB;AAClG,SAASC,aAAa,EAAEC,SAAS,QAAQ,MAAM;;;;;;;;;;ICiEnCC,+BAAqG;IACRA;MAAA;MAAA;MAAA;MAAA,OAASA,+CAAsB;IAAA,EAAC;IAA3HA,iBAA4H;IAC5HA,iCAAuE;IAAAA,YAAyB;IAAAA,iBAAQ;;;;IAD/DA,eAA8B;IAA9BA,wDAA8B;IAChCA,eAA+B;IAA/BA,yDAA+B;IAACA,eAAyB;IAAzBA,8CAAyB;;;ADvD9G,OAAM,MAAOC,eAAe;EAgB1BC,WAAW,CAACC,SAAc;IACxB,IAAIA,SAAS,CAACC,SAAS,KAAK,KAAK,EAAE;MACjCD,SAAS,CAACC,SAAS,GAAG,IAAI;KAC3B,MAAM;MACLD,SAAS,CAACC,SAAS,GAAG,KAAK;;EAEhC;EAECC,YAAoBC,aAA8B,EAAUC,2BAA6C,EAC/FC,WAAwB,EAAUC,iBAAiC;IADzD,kBAAa,GAAbH,aAAa;IAA2B,gCAA2B,GAA3BC,2BAA2B;IAC7E,gBAAW,GAAXC,WAAW;IAAuB,sBAAiB,GAAjBC,iBAAiB;IAxBrD,eAAU,GAAG,KAAK;IACnB,eAAU,GAAc,IAAIb,SAAS,CAAC,EAAE,CAAC;IAIzC,kBAAa,GAAW,EAAE,CAAC,CAAC;IAQ3B,eAAU,GAA2B,IAAIE,aAAa,CAAU,CAAC,CAAC;EAWM;EAEzEY,WAAW;IAChB,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACD,UAAU,CAACE,QAAQ,EAAE;EAC5B;EAEAC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACR,2BAA2B,CAACS,oBAAoB,EAAE,CACpDC,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACY,UAAU,CAAC,CAAC,CAChCO,SAAS,CAACC,CAAC,IAAG;MACb,IAAI,CAACC,SAAS,GAAGD,CAAC;MAClB,IAAI,CAACE,oBAAoB,GAAG,EAAE;MAC9B,KAAK,IAAIC,EAAE,IAAI,IAAI,CAACF,SAAS,EAAE;QAC7B,IAAI,CAACC,oBAAoB,CAACE,IAAI,CAAC;UAAEC,gBAAgB,EAAEF,EAAE;UAAElB,SAAS,EAAE;QAAK,CAAE,CAAC;;IAE9E,CAAC,EAAEqB,GAAG,IAAG;MAAGC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;IAAE,CAAC,CAAC;IAE3C,IAAI,CAAChB,iBAAiB,CAACmB,YAAY,EAAE,CAClCX,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACY,UAAU,CAAC,CAAC,CAChCO,SAAS,CAACC,CAAC,IAAG;MACb,IAAI,CAACU,SAAS,GAAGV,CAAC;IACpB,CAAC,EAAEM,GAAG,IAAG;MAAGC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;IAAE,CAAC,CAAC;IAE3C,IAAI,CAAChB,iBAAiB,CAACqB,QAAQ,EAAE,CAC9Bb,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACY,UAAU,CAAC,CAAC,CAChCO,SAAS,CAACC,CAAC,IAAG;MACb,IAAI,CAACY,KAAK,GAAGZ,CAAC;IAChB,CAAC,EAAEM,GAAG,IAAG;MAAGC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;IAAE,CAAC,CAAC;IAE3C,IAAI,CAAChB,iBAAiB,CAACuB,oBAAoB,EAAE,CAC1Cf,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACY,UAAU,CAAC,CAAC,CAChCO,SAAS,CAACC,CAAC,IAAG;MACb,IAAI,CAACc,iBAAiB,GAAGd,CAAC;IAC5B,CAAC,EAAEM,GAAG,IAAG;MAAGC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;IAAE,CAAC,CAAC;IAE3C,IAAI,CAAChB,iBAAiB,CAACyB,SAAS,EAAE,CAC/BjB,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACY,UAAU,CAAC,CAAC,CAChCO,SAAS,CAACC,CAAC,IAAG;MACb,IAAI,CAACgB,MAAM,GAAGhB,CAAC;IACjB,CAAC,EAAEM,GAAG,IAAG;MAAGC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;IAAE,CAAC,CAAC;IAE3C,IAAI,CAAChB,iBAAiB,CAAC2B,SAAS,EAAE,CAC/BnB,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACY,UAAU,CAAC,CAAC,CAChCO,SAAS,CAACC,CAAC,IAAG;MACb,IAAI,CAACkB,MAAM,GAAGlB,CAAC;IACjB,CAAC,EAAEM,GAAG,IAAG;MAAGC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,GAAG,CAAC;IAAE,CAAC,CAAC;EAC7C;EAEAV,QAAQ;IACN,IAAI,CAACuB,UAAU,GAAG,IAAI,CAAC9B,WAAW,CAAC+B,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,EAAE3C,UAAU,CAAC4C,QAAQ,CAAC;MAChCC,KAAK,EAAE,CAAC,EAAE,EAAE7C,UAAU,CAAC4C,QAAQ,CAAC;MAChCE,gBAAgB,EAAE,CAAC,EAAE,EAAE9C,UAAU,CAAC4C,QAAQ,CAAC;MAC3CG,OAAO,EAAE,CAAC,EAAE,EAAE/C,UAAU,CAAC4C,QAAQ,CAAC;MAClCI,IAAI,EAAE,CAAC,EAAE,EAAEhD,UAAU,CAAC4C,QAAQ,CAAC;MAC/BK,WAAW,EAAE,CAAC,EAAE,EAAEjD,UAAU,CAAC4C,QAAQ,CAAC;MACtCM,WAAW,EAAE,CAAC,EAAE,EAAElD,UAAU,CAAC4C,QAAQ,CAAC;MACtCO,YAAY,EAAE,CAAC,IAAI,EAAEnD,UAAU,CAAC4C,QAAQ;KACzC,CAAC;EACJ;EACA,CAGAQ,WAAW,CAACC,KAAY;IACtB,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAA0B;IAC1D,IAAID,iBAAiB,CAACE,KAAK,IAAIF,iBAAiB,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACjE,MAAMD,KAAK,GAAGF,iBAAiB,CAACE,KAAK;MACrC,KAAK,MAAME,IAAI,IAAIF,KAAK,EAAE;QACxB,IAAI,CAACG,aAAa,CAACjC,IAAI,CAACgC,IAAI,CAAC;;;EAGnC;EAEAE,UAAU;IACR,IAAI,IAAI,CAACnB,UAAU,CAACoB,KAAK,EAAE;MACzB,MAAMC,QAAQ,GAAoB,IAAI,CAACrB,UAAU,CAACsB,KAAK;MACvD,MAAMC,UAAU,GAAY,IAAIlE,OAAO,EAAE;MACzCkE,UAAU,CAACC,OAAO,GAAG,IAAI,CAACzB,MAAM,CAAC0B,IAAI,CAACvB,KAAK,IAAIA,KAAK,CAACwB,SAAS,KAAKL,QAAQ,CAACnB,KAAK,CAAE,CAACsB,OAAQ;MAC5FD,UAAU,CAACI,OAAO,GAAG,IAAI,CAAC9B,MAAM,CAAC4B,IAAI,CAACrB,KAAK,IAAIA,KAAK,CAACwB,SAAS,KAAKP,QAAQ,CAACjB,KAAK,CAAE,CAACuB,OAAQ;MAC5FJ,UAAU,CAAClB,gBAAgB,GAAGgB,QAAQ,CAAChB,gBAAgB;MACvDkB,UAAU,CAACjB,OAAO,GAAGe,QAAQ,CAACf,OAAO;MAErCe,QAAQ,CAAC5B,KAAK,CAACoC,OAAO,CAACC,EAAE,IAAG;QAC1B,MAAMC,YAAY,GAAG,IAAI,CAACtC,KAAK,CAACgC,IAAI,CAACO,EAAE,IAAIA,EAAE,CAACC,QAAQ,KAAKH,EAAE,CAAC;QAC9D,IAAIC,YAAY,EAAE;UAChBR,UAAU,CAAC9B,KAAK,CAACR,IAAI,CAAC8C,YAAY,CAAC;;MAEvC,CAAC,CAAC;MAEFR,UAAU,CAACf,WAAW,GAAGa,QAAQ,CAACb,WAAW;MAC7Ce,UAAU,CAACW,SAAS,GAAG,IAAI,CAAC3C,SAAS,CAACkC,IAAI,CAACU,CAAC,IAAIA,CAAC,CAACC,WAAW,KAAKf,QAAQ,CAACgB,WAAW,CAAE,CAACH,SAAU;MAEnG,KAAK,IAAIrE,SAAS,IAAI,IAAI,CAACkB,oBAAoB,EAAE;QAC/C,IAAIlB,SAAS,CAACC,SAAS,KAAK,IAAI,EAAE;UAChC,MAAMwE,wBAAwB,GAAG,IAAI,CAACxD,SAAS,CAAC2C,IAAI,CAACc,EAAE,IAAIA,EAAE,CAACC,SAAS,KAAK3E,SAAS,CAAC2E,SAAS,CAAC;UAChG,IAAIF,wBAAwB,EAAE;YAC5Bf,UAAU,CAACzC,SAAS,CAACG,IAAI,CAACqD,wBAAwB,CAAC;;;;MAIzD,IAAI,CAACtE,aAAa,CAACyE,UAAU,CAAClB,UAAU,CAAC,CACtC5C,IAAI,CAAClB,SAAS,CAAC,IAAI,CAACY,UAAU,CAAC,CAAC,CAChCO,SAAS,CACVC,CAAC,IAAG;QAAG;MAAS,CAAC,EACjBM,GAAG,IAAG;QAAGC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,EAAED,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAAC,CAAC,CAAC;KACpD,MACI;MACHC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,IAAI,CAACqD,uBAAuB,EAAE;;EAElC;EAEAA,uBAAuB;IACrBC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC5C,UAAU,CAAC6C,QAAQ,CAAC,CAAChB,OAAO,CAAC,CAACiB,GAAG,EAACxB,KAAK,KAAI;MAC1D,MAAMyB,aAAa,GAAqB,IAAI,CAAC/C,UAAU,CAACgD,GAAG,CAACF,GAAG,CAAE,CAACG,MAAO;MACzEN,MAAM,CAACC,IAAI,CAACG,aAAa,IAAI,EAAE,CAAC,CAAClB,OAAO,CAACqB,QAAQ,IAAG;QAClD9D,OAAO,CAACC,GAAG,CAAC,gBAAgByD,GAAG,eAAeI,QAAQ,eAAeH,aAAa,CAACG,QAAQ,CAAC,EAAE,CAAC;MACjG,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,KAAK;EACzB;EAEAC,MAAM;IACJ,IAAI,CAACD,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;;AA1JWzF,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAA2F;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCrB5BhG,kCAA2B;MACMA;QAAA,OAAYiG,gBAAY;MAAA,EAAC;MACtDjG,8BAA6B;MAIyBA,qBAAK;MAAAA,iBAAQ;MAC3DA,2BAAkH;MAClHA,mCAAoC;MAClCA,6BAAyE;MAC3EA,iBAAW;MAGfA,+BAAmB;MAE+BA,sBAAK;MAAAA,iBAAQ;MAC3DA,6BAAkH;MAClHA,qCAAoC;MAClCA,8BAAyE;MAC3EA,iBAAW;MAGfA,+BAAmB;MAEuCA,8BAAa;MAAAA,iBAAQ;MAC3EA,6BAAkK;MACpKA,iBAAM;MAERA,+BAAmB;MAEuCA,yBAAQ;MAAAA,iBAAQ;MACtEA,6BAA+I;MACjJA,iBAAM;MAERA,+BAAmB;MAE4BA,8BAAa;MAAAA,iBAAQ;MAChEA,mCAAgD;MACcA,aAAiB;MAAAA,iBAAS;MAI5FA,+BAAmB;MAEuCA,6BAAY;MAAAA,iBAAQ;MAC1EA,6BAA2J;MAC7JA,iBAAM;MAERA,+BAAmB;MAE0CA,2CAAqB;MAAAA,iBAAQ;MACtFA,6BAAmJ;MACnJA,qCAA+C;MAC7CA,8BAAyG;MAC3GA,iBAAW;MAGfA,+BAAmB;MAEiCA,gCAAe;MAAAA,iBAAQ;MACvEA,6BAAoI;MACpIA,qCAAsC;MACpCA,8BAAkF;MACpFA,iBAAW;MAGfA,+BAAmB;MAE8BA,qCAAe;MAAAA,iBAAQ;MACpEA,kCAAiI;MAAxCA;QAAA,OAAUiG,uBAAmB;MAAA,EAAC;MAAvHjG,iBAAiI;MAGrIA,gCAAwB;MAEpBA,mEAGM;MACRA,iBAAM;MAERA,gCAAiD;MACgBA,6BAAY;MAAAA,iBAAS;;;MAhFtFA,eAAwB;MAAxBA,0CAAwB;MAQkBA,eAA2B;MAA3BA,sDAA2B;MAS3BA,eAA2B;MAA3BA,sDAA2B;MAoB7BA,gBAAyB;MAAzBA,oDAAyB;MAACA,eAAiB;MAAjBA,uCAAiB;MAenBA,gBAAqC;MAArCA,gEAAqC;MAStDA,eAA+B;MAA/BA,0DAA+B;MAYEA,eAAuB;MAAvBA,kDAAuB","names":["Vehicle","FormGroup","Validators","ReplaySubject","takeUntil","i0","NewCarComponent","updateValue","opElement","isChecked","constructor","addCarService","getEquipmentElementsService","formBuilder","getFiltersService","ngOnDestroy","onDestroy$","next","complete","ngOnInit","initForm","getEquipmentElements","pipe","subscribe","r","equipment","operationalEquipment","el","push","equipmentElement","err","console","log","getCarbodies","carbodies","getFuels","fuels","getTransmissionTypes","transmissionTypes","getModels","models","getBrands","brands","addCarForm","group","brand","required","model","yearOfProduction","mileage","fuel","doorsAmount","carbodyType","vehicleImage","fileChanged","event","imageInputElement","target","files","length","file","vehicleImages","submitForm","valid","formData","value","newVehicle","brandId","find","brandName","modelId","modelName","forEach","f1","matchingFuel","f2","fuelName","carbodyId","c","carbodyName","carBodyType","matchingEquipmentElement","ee","elementId","addVehicle","getFormValidationErrors","Object","keys","controls","key","controlErrors","get","errors","keyError","collapse","isExpanded","toggle","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\rutko\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\app\\new-car\\new-car.component.ts","C:\\Users\\rutko\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\app\\new-car\\new-car.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { VehiclesService } from '../../services/vehicles.service';\r\nimport { EquipmentService } from '../../services/equipment.service';\r\nimport { FiltersService } from '../../services/filters.service';\r\nimport { AddCarInterface } from '../../interfaces/add-car.interface';\r\nimport { Vehicle } from '../../models/Vehicle';\r\nimport { VehicleImage } from '../../models/VehicleImage';\r\nimport { EquipmentElement } from '../../models/EquipmentElement';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, ValidationErrors } from '@angular/forms';\r\nimport { ReplaySubject, takeUntil } from 'rxjs';\r\nimport { Brand } from '../../models/Brand';\r\nimport { Model } from '../../models/Model';\r\nimport { Fuel } from '../../models/Fuel';\r\nimport { Carbody } from '../../models/Carbody';\r\nimport { TransmissionType } from '../../models/TransmissionType';\r\n\r\n@Component({\r\n  selector: 'new-car',\r\n  templateUrl: './new-car.component.html',\r\n  styleUrls: ['./new-car.component.css'],\r\n})\r\nexport class NewCarComponent implements OnInit, OnDestroy {\r\n  private isExpanded = false;\r\n  public addCarForm: FormGroup = new FormGroup({});\r\n\r\n  private equipment: EquipmentElement[]; //Whole equipment elements\r\n  public operationalEquipment: any[]; //Elements which are available in the car\r\n  public vehicleImages: File[] = []; //Photos of the car\r\n\r\n  public brands: Brand[];\r\n  public models: Model[];\r\n  public fuels: Fuel[];\r\n  public carbodies: Carbody[];\r\n  public transmissionTypes: TransmissionType[];\r\n\r\n  private onDestroy$: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\r\n\r\n  updateValue(opElement: any) {\r\n    if (opElement.isChecked === false) {\r\n      opElement.isChecked = true;\r\n    } else {\r\n      opElement.isChecked = false;\r\n    }\r\n };\r\n\r\n  constructor(private addCarService: VehiclesService, private getEquipmentElementsService: EquipmentService,\r\n    private formBuilder: FormBuilder, private getFiltersService: FiltersService) {}\r\n\r\n  public ngOnDestroy(): void {\r\n    this.onDestroy$.next(true);\r\n    this.onDestroy$.complete();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.getEquipmentElementsService.getEquipmentElements()\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(r => {\r\n        this.equipment = r;\r\n        this.operationalEquipment = [];\r\n        for (let el of this.equipment) {\r\n          this.operationalEquipment.push({ equipmentElement: el, isChecked: false });\r\n        }\r\n      }, err => { console.log(\"error\", err); });\r\n\r\n    this.getFiltersService.getCarbodies()\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(r => {\r\n        this.carbodies = r;\r\n      }, err => { console.log(\"error\", err); });\r\n\r\n    this.getFiltersService.getFuels()\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(r => {\r\n        this.fuels = r;\r\n      }, err => { console.log(\"error\", err); });\r\n\r\n    this.getFiltersService.getTransmissionTypes()\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(r => {\r\n        this.transmissionTypes = r;\r\n      }, err => { console.log(\"error\", err); });\r\n\r\n    this.getFiltersService.getModels()\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(r => {\r\n        this.models = r;\r\n      }, err => { console.log(\"error\", err); });\r\n\r\n    this.getFiltersService.getBrands()\r\n      .pipe(takeUntil(this.onDestroy$))\r\n      .subscribe(r => {\r\n        this.brands = r;\r\n      }, err => { console.log(\"error\", err); });\r\n  };\r\n\r\n  initForm() {\r\n    this.addCarForm = this.formBuilder.group({\r\n      brand: ['', Validators.required],\r\n      model: ['', Validators.required],\r\n      yearOfProduction: ['', Validators.required],\r\n      mileage: ['', Validators.required],\r\n      fuel: ['', Validators.required],\r\n      doorsAmount: ['', Validators.required],\r\n      carbodyType: ['', Validators.required],\r\n      vehicleImage: [null, Validators.required]\r\n    })\r\n  }\r\n  *\r\n\r\n\r\n  fileChanged(event: Event) {\r\n    const imageInputElement = event.target as HTMLInputElement;\r\n    if (imageInputElement.files && imageInputElement.files.length > 0) {\r\n      const files = imageInputElement.files;\r\n      for (const file of files) {\r\n        this.vehicleImages.push(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.addCarForm.valid) {\r\n      const formData: AddCarInterface = this.addCarForm.value;\r\n      const newVehicle: Vehicle = new Vehicle();\r\n      newVehicle.brandId = this.brands.find(brand => brand.brandName === formData.brand)!.brandId!;\r\n      newVehicle.modelId = this.models.find(model => model.modelName === formData.model)!.modelId!;\r\n      newVehicle.yearOfProduction = formData.yearOfProduction;\r\n      newVehicle.mileage = formData.mileage;\r\n\r\n      formData.fuels.forEach(f1 => {\r\n        const matchingFuel = this.fuels.find(f2 => f2.fuelName === f1);\r\n        if (matchingFuel) {\r\n          newVehicle.fuels.push(matchingFuel);\r\n        }\r\n      })\r\n\r\n      newVehicle.doorsAmount = formData.doorsAmount;\r\n      newVehicle.carbodyId = this.carbodies.find(c => c.carbodyName === formData.carBodyType)!.carbodyId!;\r\n\r\n      for (let opElement of this.operationalEquipment) {\r\n        if (opElement.isChecked === true) {\r\n          const matchingEquipmentElement = this.equipment.find(ee => ee.elementId === opElement.elementId);\r\n          if (matchingEquipmentElement) {\r\n            newVehicle.equipment.push(matchingEquipmentElement);\r\n          }\r\n        }\r\n      }\r\n      this.addCarService.addVehicle(newVehicle)\r\n        .pipe(takeUntil(this.onDestroy$))\r\n        .subscribe(\r\n        r => { debugger },\r\n        err => { console.log(\"błąd\"), console.log(err) });\r\n    }\r\n    else {\r\n      console.log(\"Form is not valid!!!\");\r\n      this.getFormValidationErrors();\r\n    }  \r\n  }\r\n\r\n  getFormValidationErrors() {\r\n    Object.keys(this.addCarForm.controls).forEach((key,value) => {\r\n      const controlErrors: ValidationErrors = this.addCarForm.get(key)!.errors!;\r\n      Object.keys(controlErrors || {}).forEach(keyError => {\r\n        console.log(`Key control: ${key}, keyError: ${keyError}, errValue: ${controlErrors[keyError]}`);\r\n      });\r\n    });\r\n  }\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<section class=\"mt-5 mb-5\">\r\n  <form [formGroup]=\"addCarForm\" (ngSubmit)=\"submitForm()\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"BrandDataList\" class=\"form-label\">Marka</label>\r\n            <input formControlName=\"brand\" class=\"form-control\" list=\"datalistOptions\" id=\"BrandDataList\" placeholder=\"Marka\">\r\n            <datalist id=\"BrandDatalistOptions\">\r\n              <option ngFor=\"let brand of brands\" value=\"{{brand.brandName}}\"></option>\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"ModelDataList\" class=\"form-label\">Model</label>\r\n            <input formControlName=\"model\" class=\"form-control\" list=\"datalistOptions\" id=\"ModelDataList\" placeholder=\"Model\">\r\n            <datalist id=\"ModelDatalistOptions\">\r\n              <option ngFor=\"let model of models\" value=\"{{model.modelName}}\"></option>\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"input-group mb-3\">\r\n            <label for=\"exampleDataList\" class=\"form-label w-100\">Rok Produkcji</label>\r\n            <input formControlName=\"yearOfProduction\" type=\"text\" class=\"form-control\" placeholder=\"Rok produkcji\" aria-label=\"Rok produkcji\" aria-describedby=\"basic-addon1\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"input-group mb-3\">\r\n            <label for=\"exampleDataList\" class=\"form-label w-100\">Przebieg</label>\r\n            <input formControlName=\"mileage\" type=\"text\" class=\"form-control\" placeholder=\"Przebieg\" aria-label=\"Przebieg\" aria-describedby=\"basic-addon1\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"FuelSelect\" class=\"form-label\">Rodzaj paliwa</label>\r\n            <select class=\"select\" id=\"FuelSelect\" multiple>\r\n              <option ngFor=\"let fuel of fuels\" value=\"{{fuel.fuelName}}\">{{fuel.fuelName}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"input-group mb-3\">\r\n            <label for=\"exampleDataList\" class=\"form-label w-100\">Liczba drzwi</label>\r\n            <input formControlName=\"doorsAmount\" type=\"text\" class=\"form-control\" placeholder=\"Liczba drzwi\" aria-label=\"Liczba drzwi\" aria-describedby=\"basic-addon1\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"TransmissionTypeDataList\" class=\"form-label\">Rodzaj skrzyni biegów</label>\r\n            <input formControlName=\"carbodyType\" class=\"form-control\" list=\"datalistOptions\" id=\"TransmissionTypeDataList\" placeholder=\"Rodzaj skrzyni biegów\">\r\n            <datalist id=\"TransmissionTypeDatalistOptions\">\r\n              <option ngFor=\"let transmissionType of transmissionTypes\" value=\"{{transmissionType.typeName}}\"></option>\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"CarbodyDataList\" class=\"form-label\">Rodzaj nadwozia</label>\r\n            <input formControlName=\"carbodyType\" class=\"form-control\" list=\"datalistOptions\" id=\"CarbodyDataList\" placeholder=\"Rodzaj nadwozia\">\r\n            <datalist id=\"CarbodyDatalistOptions\">\r\n              <option ngFor=\"let carbody of carbodies\" value=\"{{carbody.carbodyName}}\"></option>\r\n            </datalist>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"vehicleImage\" class=\"form-label\">Zdjęcie pojazdu</label>\r\n            <input formControlName=\"vehicleImage\" class=\"form-control\" id=\"vehicleImage\" type=\"file\" (change)=\"fileChanged($event)\" multiple>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8 mb-5\">\r\n          <div class=\"row\">\r\n            <div class=\"col-4 mb-2 d-flex justify-content-center\" *ngFor=\"let opElement of operationalEquipment\">\r\n              <input type=\"checkbox\" class=\"btn-check\" id=\"{{opElement.elementName}}\" autocomplete=\"off\" (click)=\"updateValue(opElement)\">\r\n              <label class=\"btn btn-outline-primary\" for=\"{{opElement.elementName}}\">{{opElement.elementName}}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-8 d-flex justify-content-center\">\r\n          <button type=\"submit\" class=\"btn btn-primary w-auto submitBtn\">Dodaj pojazd</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}