{"ast":null,"code":"export function createIsBrandChosenValidator(brands) {\n  return form => {\n    console.log(form.value);\n    if (brands.includes(form.value)) {\n      return null;\n    }\n    return {\n      isBrandChosen: true\n    };\n  };\n}","map":{"version":3,"mappings":"AAGA,OAAM,SAAUA,4BAA4B,CAACC,MAAe;EAC1D,OAAQC,IAAqB,IAA6B;IACxDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,CAAC;IACvB,IAAIJ,MAAM,CAACK,QAAQ,CAACJ,IAAI,CAACG,KAAK,CAAC,EAAE;MAC/B,OAAO,IAAI;;IAEb,OAAO;MAAEE,aAAa,EAAE;IAAI,CAAE;EAChC,CAAC;AACH","names":["createIsBrandChosenValidator","brands","form","console","log","value","includes","isBrandChosen"],"sourceRoot":"","sources":["C:\\Users\\rutko\\source\\repos\\Car-Fleet-Management\\CarFleet-Project\\ClientApp\\src\\custom-validators\\is-brand-chosen.ts"],"sourcesContent":["import { AbstractControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Brand } from '../models/Brand';\r\n\r\nexport function createIsBrandChosenValidator(brands: Brand[]): ValidatorFn {\r\n  return (form: AbstractControl): ValidationErrors | null => {\r\n    console.log(form.value);\r\n    if (brands.includes(form.value)) {\r\n      return null;\r\n    }\r\n    return { isBrandChosen: true };\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}